name: Release

# Controls when the workflow will run
on:
    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

jobs:
    build:
        permissions: write-all
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v2

            -   name: Setup Golang with cache
                uses: magnetikonline/action-golang-cache@v3
                with:
                    go-version-file: go.mod


            -   name: "Draft release"
                id: "release"
                uses: release-drafter/release-drafter@v5
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            -   name: Build
                run: |
                    VERSION=${{ steps.release.outputs.tag_name }}
                    COMMIT=${GITHUB_SHA::8}
                    export VERSION COMMIT
                    bash build.sh dist
    
            -   name: "Upload release linux-amd64"
                uses: actions/upload-release-asset@v1
                with:
                    upload_url: ${{ steps.release.outputs.upload_url }}
                    asset_path: ./bin/redis-shake-linux-amd64.tar.gz
                    asset_name: redis-shake-${{ steps.release.outputs.tag_name }}-linux-amd64.tar.gz
                    asset_content_type: application/gzip
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            -   name: "Upload release linux-arm64"
                uses: actions/upload-release-asset@v1
                with:
                    upload_url: ${{ steps.release.outputs.upload_url }}
                    asset_path: ./bin/redis-shake-linux-arm64.tar.gz
                    asset_name: redis-shake-${{ steps.release.outputs.tag_name }}-linux-arm64.tar.gz
                    asset_content_type: application/gzip
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            -   name: "Upload release darwin-amd64"
                uses: actions/upload-release-asset@v1
                with:
                    upload_url: ${{ steps.release.outputs.upload_url }}
                    asset_path: ./bin/redis-shake-darwin-amd64.tar.gz
                    asset_name: redis-shake-${{ steps.release.outputs.tag_name }}-darwin-amd64.tar.gz
                    asset_content_type: application/gzip
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            -   name: "Upload release darwin-arm64"
                uses: actions/upload-release-asset@v1
                with:
                    upload_url: ${{ steps.release.outputs.upload_url }}
                    asset_path: ./bin/redis-shake-darwin-arm64.tar.gz
                    asset_name: redis-shake-${{ steps.release.outputs.tag_name }}-darwin-arm64.tar.gz
                    asset_content_type: application/gzip
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            -   name: "Upload release windows-amd64"
                uses: actions/upload-release-asset@v1
                with:
                    upload_url: ${{ steps.release.outputs.upload_url }}
                    asset_path: ./bin/redis-shake-windows-amd64.tar.gz
                    asset_name: redis-shake-${{ steps.release.outputs.tag_name }}-windows-amd64.tar.gz
                    asset_content_type: application/gzip
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            -   name: "Upload release windows-arm64"
                uses: actions/upload-release-asset@v1
                with:
                    upload_url: ${{ steps.release.outputs.upload_url }}
                    asset_path: ./bin/redis-shake-windows-arm64.tar.gz
                    asset_name: redis-shake-${{ steps.release.outputs.tag_name }}-windows-arm64.tar.gz
                    asset_content_type: application/gzip
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}